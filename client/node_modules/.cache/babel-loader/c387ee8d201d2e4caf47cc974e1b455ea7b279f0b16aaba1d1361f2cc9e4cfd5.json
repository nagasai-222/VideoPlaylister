{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nagas\\\\Downloads\\\\VideoPlaylister\\\\Playlist-Manager-main\\\\client\\\\src\\\\auth\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from './auth-request-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  REGISTER_USER: \"REGISTER_USER\",\n  SET_LOGGED_IN: \"SET_LOGGED_IN\",\n  SET_ERROR: \"SET_ERROR\"\n};\nexport const ErrorType = {\n  NONE: \"NONE\",\n  REGISTER_ERROR: \"REGISTER_ERROR\",\n  LOGIN_ERROR: \"LOGIN_ERROR\"\n};\nfunction AuthContextProvider(props) {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false,\n    error_type: ErrorType.NONE,\n    message: \"\"\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            error_type: auth.error_type,\n            message: auth.message\n          });\n        }\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            error_type: auth.error_type,\n            message: auth.message\n          });\n        }\n      case AuthActionType.LOGOUT_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: false,\n            error_type: auth.error_type,\n            message: auth.message\n          });\n        }\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            error_type: auth.error_type,\n            message: auth.message\n          });\n        }\n      case AuthActionType.SET_LOGGED_IN:\n        {\n          return setAuth({\n            loggedIn: payload.loggedIn,\n            user: payload.user,\n            error_type: auth.error_type,\n            message: auth.message\n          });\n        }\n      case AuthActionType.SET_ERROR:\n        {\n          return setAuth({\n            loggedIn: auth.loggedIn,\n            user: auth.user,\n            error_type: payload.error_type,\n            message: payload.message\n          });\n        }\n      default:\n        return auth;\n    }\n  };\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.SET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user\n        }\n      });\n      return response.data.loggedIn;\n    }\n    return false;\n  };\n  auth.registerUser = async function (userName, firstName, lastName, email, password, passwordVerify) {\n    try {\n      const response = await api.registerUser(userName, firstName, lastName, email, password, passwordVerify);\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.REGISTER_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        history.push(\"/Playlister/\");\n      }\n    } catch (error) {\n      authReducer({\n        type: AuthActionType.SET_ERROR,\n        payload: {\n          error_type: ErrorType.REGISTER_ERROR,\n          message: error.response.data.errorMessage\n        }\n      });\n    }\n  };\n  auth.loginUser = async function (email, password) {\n    try {\n      const response = await api.loginUser(email, password);\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.LOGIN_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        /// Go to Playlister\n\n        history.push(\"/Playlister/\");\n      }\n    } catch (error) {\n      authReducer({\n        type: AuthActionType.SET_ERROR,\n        payload: {\n          error_type: ErrorType.LOGIN_ERROR,\n          message: error.response.data.errorMessage\n        }\n      });\n    }\n  };\n  auth.logoutUser = async function () {\n    const response = await api.logoutUser();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null\n      });\n      /// Go to Splash\n      history.push(\"/\");\n    }\n  };\n  auth.getUserInitials = function () {\n    let initials = \"\";\n    if (auth.user) {\n      initials += auth.user.firstName.charAt(0);\n      initials += auth.user.lastName.charAt(0);\n    }\n    return initials;\n  };\n\n  /// Functions to open up error modals \n  auth.isRegisterErrorOpen = () => {\n    return auth.error_type === ErrorType.REGISTER_ERROR;\n  };\n  auth.isLoginErrorOpen = () => {\n    return auth.error_type === ErrorType.LOGIN_ERROR;\n  };\n  auth.closeError = () => {\n    authReducer({\n      type: AuthActionType.SET_ERROR,\n      payload: {\n        error_type: ErrorType.NONE,\n        message: \"\"\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthContextProvider, \"ADshERguX0vPu/pBvbNOxfkhy8E=\", false, function () {\n  return [useHistory];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useHistory","api","AuthContext","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","SET_LOGGED_IN","SET_ERROR","ErrorType","NONE","REGISTER_ERROR","LOGIN_ERROR","AuthContextProvider","props","auth","setAuth","user","loggedIn","error_type","message","history","getLoggedIn","authReducer","action","type","payload","response","status","data","registerUser","userName","firstName","lastName","email","password","passwordVerify","push","error","errorMessage","loginUser","logoutUser","getUserInitials","initials","charAt","isRegisterErrorOpen","isLoginErrorOpen","closeError","children"],"sources":["C:/Users/nagas/Downloads/VideoPlaylister/Playlist-Manager-main/client/src/auth/index.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from './auth-request-api'\n\nconst AuthContext = createContext();\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    REGISTER_USER: \"REGISTER_USER\",\n    SET_LOGGED_IN: \"SET_LOGGED_IN\",\n    SET_ERROR: \"SET_ERROR\",\n}\n\nexport const ErrorType = {\n    NONE: \"NONE\",\n    REGISTER_ERROR: \"REGISTER_ERROR\",\n    LOGIN_ERROR: \"LOGIN_ERROR\",\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        error_type:ErrorType.NONE,\n        message:\"\"\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    error_type: auth.error_type,\n                    message: auth.message,\n                });\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error_type: auth.error_type,\n                    message: auth.message,\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false,\n                    error_type: auth.error_type,\n                    message: auth.message,\n                })\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error_type: auth.error_type,\n                    message: auth.message,\n                })\n            }\n            case AuthActionType.SET_LOGGED_IN:{\n                return setAuth({\n                    loggedIn:payload.loggedIn,\n                    user: payload.user,\n                    error_type: auth.error_type,\n                    message: auth.message,\n                })\n            }\n            case AuthActionType.SET_ERROR:{\n                return setAuth({\n                    loggedIn:auth.loggedIn,\n                    user: auth.user,\n                    error_type: payload.error_type,\n                    message: payload.message,\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.SET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n            return response.data.loggedIn;\n        }\n        return false;\n    }\n\n    auth.registerUser = async function(userName,firstName, lastName, email, password, passwordVerify) {\n        try{\n            const response = await api.registerUser(userName,firstName, lastName, email, password, passwordVerify);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/Playlister/\");\n            }\n        }catch(error){\n            authReducer({\n                type: AuthActionType.SET_ERROR,\n                payload: {\n                    error_type:ErrorType.REGISTER_ERROR,\n                    message:error.response.data.errorMessage\n                }\n            })\n            }\n        }\n        \n    \n\n    auth.loginUser = async function(email, password) {\n        try{\n            const response = await api.loginUser(email, password);\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGIN_USER,\n                payload: {\n                    user: response.data.user\n                }\n            })\n            /// Go to Playlister\n           \n            history.push(\"/Playlister/\");\n        }\n        }catch(error){\n            authReducer({\n                type: AuthActionType.SET_ERROR,\n                payload: {\n                    error_type:ErrorType.LOGIN_ERROR,\n                    message:error.response.data.errorMessage\n                }\n            })\n            }\n\n        }\n        \n    \n\n    auth.logoutUser = async function() {\n        const response = await api.logoutUser();\n        if (response.status === 200) {\n            authReducer( {\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            /// Go to Splash\n            history.push(\"/\");\n        }\n    }\n\n    auth.getUserInitials = function() {\n        let initials = \"\";\n        if (auth.user) {\n            initials += auth.user.firstName.charAt(0);\n            initials += auth.user.lastName.charAt(0);\n        }\n        return initials;\n    }\n\n    /// Functions to open up error modals \n    auth.isRegisterErrorOpen =()=>{\n        return auth.error_type === ErrorType.REGISTER_ERROR;\n    }\n    auth.isLoginErrorOpen =()=>{\n        return auth.error_type === ErrorType.LOGIN_ERROR;\n    }\n\n    auth.closeError = ()=>{\n        authReducer({\n            type: AuthActionType.SET_ERROR,\n            payload: {\n                error_type:ErrorType.NONE,\n                message:\"\",\n            }\n        })\n\n    }\n   \n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}