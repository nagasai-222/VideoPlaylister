{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nagas\\\\Downloads\\\\VideoPlaylister\\\\Playlist-Manager-main\\\\client\\\\src\\\\components\\\\WorkspaceScreen.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport SongCard from './SongCard.js';\nimport MUIEditSongModal from './MUIEditSongModal';\nimport MUIRemoveSongModal from './MUIRemoveSongModal';\nimport List from '@mui/material/List';\nimport { GlobalStoreContext } from '../store/index.js';\nimport EditToolbar from './EditToolbar';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkspaceScreen(props) {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const {\n    id\n  } = props;\n  useEffect(() => {\n    store.LoadPlaylists();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /// Song Editing\n  let modalJSX = \"\";\n  if (store.isEditSongModalOpen()) {\n    modalJSX = /*#__PURE__*/_jsxDEV(MUIEditSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this);\n  }\n  if (store.isRemoveSongModalOpen()) {\n    modalJSX = /*#__PURE__*/_jsxDEV(MUIRemoveSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }, this);\n  }\n  function handleAddNewSong(event) {\n    store.addNewSong();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workspace\",\n    children: [modalJSX, /*#__PURE__*/_jsxDEV(List, {\n      id: \"list-selector-list\",\n      sx: {\n        width: '100%',\n        backgroundColor: 'transparent'\n      },\n      children: store.currentList ? store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n        id: 'playlist-song-' + index,\n        index: index,\n        song: song\n      }, 'playlist-song-' + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: '#E6DDC4'\n      },\n      disabled: !store.canAddNewSong(),\n      id: \"add-song-button\",\n      onClick: handleAddNewSong,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n        style: {\n          color: 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(EditToolbar, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(WorkspaceScreen, \"zcSHy1BfRD8G+YsMEU+ijfZDP/Y=\");\n_c = WorkspaceScreen;\nexport default WorkspaceScreen;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceScreen\");","map":{"version":3,"names":["useContext","useEffect","SongCard","MUIEditSongModal","MUIRemoveSongModal","List","GlobalStoreContext","EditToolbar","Button","AddIcon","WorkspaceScreen","props","store","id","LoadPlaylists","modalJSX","isEditSongModalOpen","isRemoveSongModalOpen","handleAddNewSong","event","addNewSong","width","backgroundColor","currentList","songs","map","song","index","canAddNewSong","color"],"sources":["C:/Users/nagas/Downloads/VideoPlaylister/Playlist-Manager-main/client/src/components/WorkspaceScreen.js"],"sourcesContent":["import { useContext,useEffect} from 'react'\n\nimport SongCard from './SongCard.js'\nimport MUIEditSongModal from './MUIEditSongModal'\nimport MUIRemoveSongModal from './MUIRemoveSongModal'\nimport List from '@mui/material/List';\nimport { GlobalStoreContext } from '../store/index.js'\nimport EditToolbar from './EditToolbar'\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\n\nfunction WorkspaceScreen(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const {id} = props;\n\n    useEffect(() => {\n        store.LoadPlaylists();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n   \n    /// Song Editing\n    let modalJSX = \"\";\n    if (store.isEditSongModalOpen()) {\n        modalJSX = <MUIEditSongModal />;\n    }\n    if (store.isRemoveSongModalOpen()) {\n        modalJSX = <MUIRemoveSongModal />;\n    }\n    function handleAddNewSong(event) {\n        store.addNewSong();\n    }\n  \n    \n\n    return (\n        <div className='workspace'>\n        { modalJSX }     \n        <List \n            id=\"list-selector-list\" \n            sx={{  width:'100%' , backgroundColor: 'transparent' }}\n        >\n            {\n               store.currentList? store.currentList.songs.map((song, index) => (\n                    <SongCard\n                        id={'playlist-song-' + (index)}\n                        key={'playlist-song-' + (index)}\n                        index={index}\n                        song={song}\n                       \n                    />\n                )):\"\"\n            }\n         </List> \n         <Button\n                style={{backgroundColor:'#E6DDC4'}}\n                disabled={!store.canAddNewSong()}\n                id='add-song-button'\n                onClick={handleAddNewSong}\n                variant=\"contained\">\n                <AddIcon  style={{color:'black'}} />\n         </Button>\n         <EditToolbar id={id}></EditToolbar>\n         \n         </div>\n    )\n}\n\nexport default  WorkspaceScreen;"],"mappings":";;AAAA,SAASA,UAAU,EAACC,SAAS,QAAO,OAAO;AAE3C,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAE9C,SAASC,eAAe,CAACC,KAAK,EAAE;EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGZ,UAAU,CAACM,kBAAkB,CAAC;EAChD,MAAM;IAACO;EAAE,CAAC,GAAGF,KAAK;EAElBV,SAAS,CAAC,MAAM;IACZW,KAAK,CAACE,aAAa,EAAE;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACA,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIH,KAAK,CAACI,mBAAmB,EAAE,EAAE;IAC7BD,QAAQ,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EACnC;EACA,IAAIH,KAAK,CAACK,qBAAqB,EAAE,EAAE;IAC/BF,QAAQ,gBAAG,QAAC,kBAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EACrC;EACA,SAASG,gBAAgB,CAACC,KAAK,EAAE;IAC7BP,KAAK,CAACQ,UAAU,EAAE;EACtB;EAIA,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,WACxBL,QAAQ,eACV,QAAC,IAAI;MACD,EAAE,EAAC,oBAAoB;MACvB,EAAE,EAAE;QAAGM,KAAK,EAAC,MAAM;QAAGC,eAAe,EAAE;MAAc,CAAE;MAAA,UAGpDV,KAAK,CAACW,WAAW,GAAEX,KAAK,CAACW,WAAW,CAACC,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtD,QAAC,QAAQ;QACL,EAAE,EAAE,gBAAgB,GAAIA,KAAO;QAE/B,KAAK,EAAEA,KAAM;QACb,IAAI,EAAED;MAAK,GAFN,gBAAgB,GAAIC,KAAM;QAAA;QAAA;QAAA;MAAA,QAKtC,CAAC,GAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAEL,eACP,QAAC,MAAM;MACA,KAAK,EAAE;QAACL,eAAe,EAAC;MAAS,CAAE;MACnC,QAAQ,EAAE,CAACV,KAAK,CAACgB,aAAa,EAAG;MACjC,EAAE,EAAC,iBAAiB;MACpB,OAAO,EAAEV,gBAAiB;MAC1B,OAAO,EAAC,WAAW;MAAA,uBACnB,QAAC,OAAO;QAAE,KAAK,EAAE;UAACW,KAAK,EAAC;QAAO;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAClC,eACT,QAAC,WAAW;MAAC,EAAE,EAAEhB;IAAG;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7B;AAEf;AAAC,GAtDQH,eAAe;AAAA,KAAfA,eAAe;AAwDxB,eAAgBA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}